<Window x:Class="Taschenrechner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Taschenrechner"
        mc:Ignorable="d"
        Title="Taschenrechner" Height="447.501" Width="388.209" ResizeMode="CanMinimize" IsTabStop="True">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,-9,-5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#96FF85"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#008000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#8AEB7B"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#008000"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundeButtonBlue" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,-9,-5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#6486C8"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#002B80"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#5877B2"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#002B80"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxTransparent" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="False">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                <Setter Property="Foreground" TargetName="border" Value="#989898"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxAnzeige" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFECECEC"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFECECEC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Button Content="1" HorizontalAlignment="Left" Margin="10,281,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="2" HorizontalAlignment="Left" Margin="96,281,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="3" HorizontalAlignment="Left" Margin="182,281,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="4" HorizontalAlignment="Left" Margin="10,226,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="5" HorizontalAlignment="Left" Margin="96,226,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="6" HorizontalAlignment="Left" Margin="182,226,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="7" HorizontalAlignment="Left" Margin="10,170,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="8" HorizontalAlignment="Left" Margin="96,170,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="9" HorizontalAlignment="Left" Margin="182,170,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="0" HorizontalAlignment="Left" Margin="10,336,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button x:Name="btn_Komma" Content="," HorizontalAlignment="Left" Margin="96,336,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="Green" Height="44" Foreground="Green" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Input"/>
        <Button Content="=" HorizontalAlignment="Left" Margin="182,336,0,0" VerticalAlignment="Top" Width="74" Background="#FF1ED42A" BorderBrush="Green" Height="44" Foreground="White" FontSize="24" Style="{DynamicResource RoundedButton}" Click="Calculate"/>
        <Button x:Name="btnPlus" Content="+" HorizontalAlignment="Left" Margin="268,336,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}" Click="Operator"/>
        <Button Content="-" Click="Operator" HorizontalAlignment="Left" Margin="268,281,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}"/>
        <Button Content="*" Click="Operator" HorizontalAlignment="Left" Margin="268,226,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}"/>
        <Button Content="/" Click="Operator" HorizontalAlignment="Left" Margin="268,170,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}"/>
        <Button Content="!" HorizontalAlignment="Left" Margin="182,112,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}" Click="FakultaetCall"/>
        <Button Content="qs" HorizontalAlignment="Left" Margin="96,112,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}" Click="qsCall"/>
        <Button Content="ggT" HorizontalAlignment="Left" Margin="10,112,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}" Click="Operator"/>
        <Button Content="%" Click="Operator" HorizontalAlignment="Left" Margin="268,112,0,0" VerticalAlignment="Top" Width="74" Background="White" BorderBrush="#FF002B80" Height="44" Foreground="#FF002B80" FontSize="24" Style="{DynamicResource RoundeButtonBlue}"/>
        <Canvas HorizontalAlignment="Left" Height="96" VerticalAlignment="Top" Width="382" Background="#FFECECEC">
            <RadioButton x:Name="rb_Integer" Content="Ganzzahl" Canvas.Left="10" Canvas.Top="71" Foreground="#FF707070" IsChecked="True" GroupName="Modus" Click="Gleitkomma"/>
            <RadioButton x:Name="rb_Gleitkomma" Content="Gleitkomma" Canvas.Left="82" Canvas.Top="71" Foreground="#FF707070" GroupName="Modus" IsChecked="True" Click="Gleitkomma"/>
            <Button Content="DEL" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37" Height="26" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF707070" FontSize="16" FontWeight="Bold" Canvas.Left="309" Canvas.Top="64" Style="{DynamicResource TransparentButton}" Click="Delete"/>
            <Button Content="C" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37" Height="26" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Red" FontSize="16" FontWeight="Bold" Canvas.Left="282" Canvas.Top="64" Style="{DynamicResource TransparentButton}" Click="Delete"/>
            <Button Content="CE" HorizontalAlignment="Left" VerticalAlignment="Top" Width="37" Height="26" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Red" FontSize="16" FontWeight="Bold" Canvas.Left="258" Canvas.Top="64" Style="{DynamicResource TransparentButton}" Click="Delete"/>
            <TextBox x:Name="OutputRechnung" Height="30" TextWrapping="Wrap" Text="" IsReadOnly="True" Width="382" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF707070" FontSize="22" Style="{DynamicResource TextBoxAnzeige}" Canvas.Top="39"/>
            <TextBox x:Name="Output" Height="39" TextWrapping="Wrap" Text="" IsReadOnly="True" Width="382" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF707070" FontSize="34" Style="{DynamicResource TextBoxAnzeige}"/>
        </Canvas>
    </Grid>
</Window>
